#!/bin/bash

# Script para desplegar el WAR corregido cuando ya est√°s EN el VPS
# Este script NO usa SSH, ejecuta todo localmente en el VPS

echo "=== DESPLEGANDO WAR DESDE VPS LOCAL ==="
echo "Fecha: $(date)"
echo

# Variables
LOCAL_WAR="target/pdf-signer-war-1.0.war"
TOMCAT_WEBAPPS="/var/lib/tomcat/webapps"
APP_NAME="pdf-signer"

# Verificar que estamos en el VPS
if [ ! -f "/etc/nginx/nginx.conf" ] || [ ! -d "/var/lib/tomcat" ]; then
    echo "‚ùå ERROR: Este script debe ejecutarse EN el VPS"
    echo "   No se detecta Nginx o Tomcat instalados"
    exit 1
fi

echo "‚úÖ Ejecut√°ndose en el VPS"
echo

# Verificar que el WAR local existe
if [ ! -f "$LOCAL_WAR" ]; then
    echo "‚ùå ERROR: No se encuentra el archivo WAR: $LOCAL_WAR"
    echo "   Aseg√∫rate de haber compilado el proyecto:"
    echo "   mvn clean package -DskipTests"
    exit 1
fi

echo "‚úÖ WAR local encontrado: $LOCAL_WAR"
echo "üì¶ Tama√±o: $(du -h $LOCAL_WAR | cut -f1)"
echo

# Verificar que el web.xml est√° presente
echo "üîç Verificando presencia de web.xml..."
if unzip -l "$LOCAL_WAR" | grep -q "WEB-INF/web.xml"; then
    echo "‚úÖ web.xml encontrado en el WAR"
else
    echo "‚ùå ERROR: web.xml NO encontrado en el WAR"
    echo "   El WAR no se gener√≥ correctamente"
    exit 1
fi
echo

# Detener Tomcat
echo "üõë Deteniendo Tomcat..."
sudo systemctl stop tomcat
if [ $? -eq 0 ]; then
    echo "‚úÖ Tomcat detenido"
else
    echo "‚ùå ERROR: No se pudo detener Tomcat"
    exit 1
fi
echo

# Limpiar despliegue anterior
echo "üßπ Limpiando despliegue anterior..."
sudo rm -rf $TOMCAT_WEBAPPS/pdf-signer*
echo "‚úÖ Despliegue anterior eliminado"
echo

# Copiar nuevo WAR
echo "üìã Copiando nuevo WAR..."
sudo cp "$LOCAL_WAR" "$TOMCAT_WEBAPPS/pdf-signer.war"
sudo chown tomcat:tomcat "$TOMCAT_WEBAPPS/pdf-signer.war"
if [ $? -eq 0 ]; then
    echo "‚úÖ WAR copiado y permisos asignados"
else
    echo "‚ùå ERROR: No se pudo copiar el WAR"
    exit 1
fi
echo

# Iniciar Tomcat
echo "‚ñ∂Ô∏è Iniciando Tomcat..."
sudo systemctl start tomcat
if [ $? -eq 0 ]; then
    echo "‚úÖ Tomcat iniciado"
else
    echo "‚ùå ERROR: No se pudo iniciar Tomcat"
    exit 1
fi
echo

# Esperar despliegue
echo "‚è≥ Esperando despliegue de la aplicaci√≥n..."
sleep 15
echo

# Verificar despliegue
echo "üîç Verificando despliegue..."
if [ -d "$TOMCAT_WEBAPPS/pdf-signer" ]; then
    echo "‚úÖ Directorio de aplicaci√≥n creado"
    
    # Verificar web.xml
    if [ -f "$TOMCAT_WEBAPPS/pdf-signer/WEB-INF/web.xml" ]; then
        echo "‚úÖ web.xml presente en el despliegue"
        echo "üìÑ Contenido de web.xml:"
        head -10 "$TOMCAT_WEBAPPS/pdf-signer/WEB-INF/web.xml"
    else
        echo "‚ùå web.xml NO encontrado en el despliegue"
    fi
    
    # Verificar estructura
    echo "üìÅ Estructura del despliegue:"
    ls -la $TOMCAT_WEBAPPS/pdf-signer/WEB-INF/ | head -10
else
    echo "‚ùå ERROR: Directorio de aplicaci√≥n NO creado"
fi
echo

# Verificar estado de servicios
echo "üîç Estado de servicios:"
echo "Tomcat: $(systemctl is-active tomcat)"
echo "Nginx: $(systemctl is-active nginx)"
echo

# Verificar logs de Tomcat
echo "üìã √öltimas l√≠neas del log de Tomcat:"
tail -20 /var/lib/tomcat/logs/catalina.out
echo

# Pruebas de conectividad
echo "üß™ Pruebas de conectividad:"
echo "Tomcat directo (puerto 8080):"
curl -s -o /dev/null -w "Status: %{http_code}\n" http://localhost:8080/pdf-signer/ || echo "‚ùå Fall√≥"
echo
echo "Nginx HTTP (puerto 80):"
curl -s -o /dev/null -w "Status: %{http_code}\n" http://localhost/pdf-signer/ || echo "‚ùå Fall√≥"
echo
echo "Nginx HTTPS (puerto 443):"
curl -s -o /dev/null -w "Status: %{http_code}\n" https://localhost/pdf-signer/ -k || echo "‚ùå Fall√≥"
echo

# Verificar puertos
echo "üîå Puertos en uso:"
echo "Puerto 8080 (Tomcat): $(netstat -tlnp | grep :8080 | wc -l) conexiones"
echo "Puerto 80 (Nginx): $(netstat -tlnp | grep :80 | wc -l) conexiones"
echo "Puerto 443 (Nginx SSL): $(netstat -tlnp | grep :443 | wc -l) conexiones"
echo

echo "=== DESPLIEGUE COMPLETADO ==="
echo "‚úÖ El WAR corregido ha sido desplegado localmente"
echo "üîß Cambios realizados:"
echo "   - Clase principal extiende SpringBootServletInitializer"
echo "   - web.xml incluido en el WAR"
echo "   - Configuraci√≥n correcta para Tomcat"
echo
echo "üåê Prueba las URLs desde fuera del VPS:"
echo "   - https://validador.usiv.cl/pdf-signer/"
echo "   - https://validador.usiv.cl/pdf-signer/api/health"
echo "   - https://validador.usiv.cl/pdf-signer/swagger-ui/"
echo
echo "üí° Si hay problemas, revisa:"
echo "   - Logs de Tomcat: tail -f /var/lib/tomcat/logs/catalina.out"
echo "   - Logs de Nginx: tail -f /var/log/nginx/error.log"
echo "   - Estado de servicios: systemctl status tomcat nginx"
echo